pipe 的用法
pipe(fd[2]) 作为输入，输出管道
使用时用 write 和 read 读写
使用完毕后需要 close 对应端口来让 read 返回 EOF / 避免 write 持续占用

copyout
内核态和用户态不共享地址，因此需要在用户态调用时加入地址
内核态通过读取这个地址，将需要的信息拷贝到该位置

在 kernal 中添加函数后，需要在 defs.h 中添加函数定义